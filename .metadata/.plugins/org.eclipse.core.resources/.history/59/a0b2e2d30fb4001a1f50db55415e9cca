package com.example.demo.service;

import java.io.IOException;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.util.StringUtils;
import org.springframework.web.multipart.MultipartFile;

import com.example.demo.exception.FileStorageException;
import com.example.demo.exception.MyFileNotFoundException;
import com.example.demo.model.TestEmp;
import com.example.demo.repository.TestEmpRepository;

@Service
public class TestEmpService {
    @Autowired
    private TestEmpRepository dbFileEmpRepository;

    public TestEmp storeFile(MultipartFile file , long idChefProjet) {
        // Normalize file getOriginalFilename
        String fileName = StringUtils.cleanPath(file.getOriginalFilename());


        try {
            // Check if the file's name contains invalid characters
            if(fileName.contains("..")) {
                throw new FileStorageException("Sorry! Filename contains invalid path sequence " + fileName);
            }

            TestEmp dbFile = new TestEmp(fileName, file.getBytes(),idChefProjet);

            return dbFileEmpRepository.save(dbFile);
        } catch (IOException ex) {
            throw new FileStorageException("Could not store file " + fileName + ". Please try again!", ex);
        }
    }

    public TestEmp getFile(String fileId) {
        return dbFileEmpRepository.findByIdChefProjet(fileId)
                .orElseThrow(() -> new MyFileNotFoundException("File not found with id " + fileId));
    }
    public TestEmp getFileByid(String id_emp) {
        return dbFileEmpRepository.findByIdChefProjet(id_emp)
                .orElseThrow(() -> new MyFileNotFoundException("File not found with id " + id_emp));
    }

    public TestEmp getAllFile() {
        return dbFileEmpRepository.findFileEmp()
                .orElseThrow(() -> new MyFileNotFoundException("File not found with id "));
    }
    
}
